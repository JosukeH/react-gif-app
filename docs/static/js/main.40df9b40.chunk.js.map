{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","getGifs","categoria","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loaded","state","setState","useEffect","then","loading","useFetchGifs","gif","GifExpert","categorias","ReactDOM","render","document","getElementById"],"mappings":"uLAsCeA,EAnCM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACtCN,EAAc,MAKlB,SAEA,uBAAOO,KAAK,OACZC,MAAOT,EACNU,SAnBiB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,QAmBtBG,YAAY,qB,+BC3BRC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC2EF,EAD3E,sBAEDG,MAAMD,GAFL,cAEbE,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATnB,kBAaZK,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAGlC,OADAa,QAAQC,IAAI,CAACN,KAAGC,QAAMT,QAElB,sBAAKe,UAAU,wCAAf,UACE,4BAAIN,IACJ,qBAAKO,IAAKhB,EAAKiB,IAAKR,QCmBfS,EAvBC,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UAElB,ECH2B,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNe,QAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAIPzB,EAAQC,GACPyB,MAAK,SAAAlB,GACFgB,EAAS,CACLjB,KAAKC,EACLmB,SAAQ,SAKjB,CAAC1B,IAEGsB,EDnBWK,CAAa3B,GAA3BM,EAAP,EAAOA,KAAKe,EAAZ,EAAYA,OAEX,OACE,qCACE,6BAAKrB,IACJqB,GAAU,yCACX,qBAAKJ,UAAU,YAAf,SAGEX,EAAKE,KAAI,SAACoB,GAAD,OACP,cAAC,EAAD,eAEIA,GADCA,EAAIlB,aEaJmB,EA1BG,WAEd,MAAoC5C,mBAAS,CAAC,UAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIA,OACI,qCAEC,6CACG,cAAC,EAAD,CAAcA,cAAeA,IAChC,uBAEG,6BAEQ8C,EAAWtB,KAAI,SAAAR,GAAS,OACpB,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCftC+B,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.40df9b40.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';        \r\n\r\nconst AddCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n    const handleChange  = (e) =>{\r\n        setInputValue(e.target.value );\r\n      \r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias((cat) => [inputValue,...cat])\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n        <input type=\"text\" \r\n        value={inputValue}\r\n         onChange={handleChange}\r\n         placeholder=\"Ingrese texto\"\r\n         />\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategoria","export const getGifs = async (categoria) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=u7nAvx1yjy3jlXS3ll2NIdq6QVW8Ju5O&q=${categoria}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n          <p>{title}</p>\r\n          <img src={url} alt={title} />  \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n  \r\n const {data,loaded} =useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {loaded && <p>Cargando</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n\r\n        data.map((gif) => (\r\n          <GifGridItem \r\n          key={gif.id} \r\n          {...gif} />\r\n        ))\r\n        \r\n        }\r\n      </div> \r\n  </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loaded: true,\r\n    })\r\n\r\n    useEffect( () =>{\r\n\r\n  \r\n\r\n        getGifs(categoria)\r\n        .then(gifs => {\r\n            setState({\r\n                data:gifs,\r\n                loading:false\r\n            });\r\n        })\r\n\r\n\r\n    }, [categoria])\r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport AddCategoria from './components/AddCategoria';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpert = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['JOJOS']);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n         <h1> Gif Expert</h1>\r\n            <AddCategoria setCategorias={setCategorias}/>\r\n         <hr/>\r\n              \r\n            <ul>\r\n                {\r\n                    categorias.map(categoria =>\r\n                        <GifGrid key={categoria} categoria={categoria} />\r\n                    )\r\n\r\n                }\r\n            </ul>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifExpert\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert';\nimport './index.css';\n\nReactDOM.render(<GifExpert/> ,document.getElementById('root'));\n\n"],"sourceRoot":""}